# my global config
global:
  scrape_interval: 15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: "{{ inventory_hostname_short }}"

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
#rule_files:
  # - 'alert.rules'
  # - "first.rules"
  # - "second.rules"

# alert
#alerting:
#  alertmanagers:
#    - scheme: http
#      static_configs:
#        - targets:
#            - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
{% for scrape_config in scrape_configs %}
  - job_name: "{{ scrape_config.job_name }}"
{% if scrape_config.credentials is defined %}
    authorization:
      credentials: "{{ scrape_config.credentials }}"
{% endif %}
{% if scrape_config.metrics_path is defined %}
    metrics_path: "{{ scrape_config.metrics_path }}"
{% endif %}
{% if scrape_config.scheme is defined %}
    scheme: "{{ scrape_config.scheme }}"
{% endif %}
{% if scrape_config.basic_auth is defined %}
    basic_auth: 
      username: "{{ scrape_config.basic_auth.username }}"
      password: "{{ scrape_config.basic_auth.password }}"
{% endif %}
{% if scrape_config.federated is defined and scrape_config.federated %}     
    params:
      'match[]':
        - '{__name__=~".+"}'        
{% endif %}
    static_configs:
{% for target in scrape_config.targets %}
      - targets: ["{{ target.host }}"]
{% if target.hostname is defined %}      
        labels: 
          hostname: "{{ target.hostname }}"
{% endif %}
{% endfor %}
{% endfor %}
