# based on https://github.com/vegasbrianc/prometheus/blob/master/docker-traefik-stack.yml
version: '3.9'
services:

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - "{{ prometheus_dir.path }}:/prometheus"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=120d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    #      - '--log.level=debug'
    labels:
      - com.centurylinklabs.watchtower.enable=true
    depends_on:
      - cadvisor
    networks:
      - internal
      - monitoring
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    labels:
      - com.centurylinklabs.watchtower.enable=true
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    networks:
      - internal
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    labels:
      - com.centurylinklabs.watchtower.enable=true
    command:
      - '-housekeeping_interval=30s'
      - '-store_container_labels=false'
      - '-docker_only=true'
    # - '-allow_dynamic_housekeeping=true'
    devices:
      - /dev/kmsg:/dev/kmsg
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    user: "472"
    depends_on:
      - prometheus
    volumes:
      - "{{ grafana_dir.path }}:/var/lib/grafana"
      - "{{ docker_dir.path }}/grafana/provisioning/:/etc/grafana/provisioning/"
    env_file:
      - ./grafana/config.monitoring
    networks:
      - web
      - internal
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.{{ role_name }}.rule=Host(`{{ domain }}`)
      - traefik.http.routers.{{ role_name }}.entrypoints=https
      - traefik.http.routers.{{ role_name }}.tls=true
      - traefik.http.routers.{{ role_name }}.tls.certresolver=letsencrypt
      - com.centurylinklabs.watchtower.enable=true

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    networks:
      - internal
      - web
    depends_on:
      - prometheus
    volumes:
      - "{{ docker_dir.path }}/blackbox_exporter:/config"
    command: --config.file=/config/blackbox.yaml
    labels:
      - com.centurylinklabs.watchtower.enable=true

networks:
  internal:
    internal: true
  monitoring:
    external: true
  web:
    external:
      name: traefik_web
